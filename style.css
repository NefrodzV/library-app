:root {
  --primary: gray;
  --secondary: burlywood;
  --border-clr: --secondary;
  --valid: lightgreen;
  --invalid: red;
  --focus: rgb(105, 95, 180);
}
/*************** R E S E T **********************/
/* Box sizing rules */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Remove default margin */
body,
h1,
h2,
h3,
h4,
p,
figure,
blockquote,
dl,
dd {
  margin: 0;
}

/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */
ul[role='list'],
ol[role='list'] {
  list-style: none;
}

/* Set core root defaults */
html:focus-within {
  scroll-behavior: smooth;
}

/* Set core body defaults */
body {
  min-height: 100vh;
  text-rendering: optimizeSpeed;
  line-height: 1.5;
}

/* A elements that don't have a class get default styles */
a:not([class]) {
  text-decoration-skip-ink: auto;
}

/* Make images easier to work with */
img,
picture {
  max-width: 100%;
  display: block;
}

/* Inherit fonts for inputs and buttons */
input,
button,
textarea,
select {
  font: inherit;
}

/***************** MY STYLE *************************/
body {
  position: relative;
  display: grid;
  grid-template-rows: max(10vh, 100px) auto;
}
.header, .menu, .wrapper, .book {
  display: flex;
}

.header, .container {
  padding: 0 1.5vw 0 1.5vw;
}
.header {
  position: relative;
  font-size: clamp(1.2rem, 1vw + 1rem, 3rem);
  align-items: center;
  justify-content: space-between;
  background-color: gray;
}

.menu {
  height: 50%;
  flex: .2;
  justify-content: end;
  gap: min(.5vw, 32px)
}

.menu > .separator {
  background-color: black;
  width: 2px;
  opacity: 25%;
}

a {
  text-decoration: none;
  color: black;
  font-size: clamp(1rem, 1vw + .5rem, 2rem);
}

a:hover {
  color: var(--secondary);
}

.menu-items {
  align-self: center;
}

.container {
  background-color:var(--secondary);
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center;
}

.wrapper {
  margin-top: 1%;
  justify-content: space-between;
}

.books-title {
  font-size: clamp(2rem, 1vw + 1rem, 3rem);
}

.add{
  width: clamp(4rem, 3vw + 6rem, 10vw);
  background-color: var(--primary);
  font-size: clamp(1rem, 1vw + 1rem , 2.5rem);
  border-radius: 5px;
}

.add:hover {
  background-color:  rgba(128,128,128, .7);
}

.book-container {
  margin: 1% 0 0 0;
  padding-bottom: 3%;
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(clamp(300px, 20vw, 600px), 1fr));
  gap: min(1vw, 16px);
}

/** Book **/
.book {
  color: white;
  /* font-size: clamp(2rem, 1vw + 2rem, 2rem); */
  justify-content: center;
  align-items: center;
  flex-direction: column;
  background: linear-gradient(to right, rgb(60, 13, 13) 20px, rgb(124, 66, 66) 30px, rgb(60, 13, 13)35px, rgb(124, 66, 66) 45px, rgb(100, 52, 52));
  height: max(40vh, 500px);
  border-radius: 6px;
  gap: min(1vw, 16px);
  box-shadow: 3px 3px 6px rgba(0, 0, 0, .7);
}
.title-para {
  font-size: 2rem;
}
.author-para {
  font-size: 1.8rem;
}

.pages-para {
  font-size: 1.5rem;
}
.button-wrapper {
  width: 180px;
  display: flex;
  flex-direction: column;
  gap: 8px;
}

.button-wrapper > button {
  border-radius: 10px;
  width: 100%;
  text-transform: uppercase;
}

.read-status {
  background-color: lightgreen;
}

.reading-status {
  background-color: lightsalmon;
}

.not-read-status {
  background-color: lightcoral;
}

.delete {
  background-color: hsl(348, 83%, 60%);
}


.shadow {
  box-shadow: 3px 3px 6px rgba(0, 0, 0, .5);
}

.text-shadow {
  text-shadow: 3px 3px 6px rgba(0, 0, 0, .5);
}

/** Form **/
.book-form {
  display: none;
  z-index: 1;
  font-size: medium;
  border-radius: 5px;
  background-color: gray;
  position: fixed;
  top: 50%;
  left: 50%;
  width: 300px;
  height: 300px;
  row-gap: 8px;
  grid-template-rows: min(5vh, 35px) auto;
  transform: translate(-50%, -50%);
}

.book-form[visible] {
  display: grid;
}
input {
  border: 3px solid var(--border-clr, burlywood);
  outline-offset: 5px;
  border-radius: 10px;
  text-indent: 5%;
  font-size: large;
  text-transform: capitalize;
  background-color: none;
}

input:invalid {
  --border-clr: var(--invalid);
}

input:focus, input:focus:placeholder-shown {
  --border-clr: var(--focus);
}

input:valid {
  --border-clr: var(--valid);
}

input:placeholder-shown {
  --border-clr: var(--secondary);
}

.close {
  height: 100%;
  display: flex;
  justify-content: center;
  margin: 3px 3px 0 0;
  border-radius: 5px;
  background-color: var(--secondary);
  font-size: 2rem;
  justify-self: end;
}

.close > svg {
  height: 100%;
  width: 100%;
}

fieldset {
  min-inline-size: outside;
  margin:0 auto;
  border: none;
  display: flex;
  gap: 8px;
  flex-direction: column;
justify-content: flex-start;
}

legend {
  font-weight: bolder;
  font-size: large;
  text-transform: uppercase;
}

.error-message{
  display: none;
  align-self: flex-end;
}

.error-message[visible] {
  display: block;
}

fieldset > button {
  grid-column: 1/3;
  justify-self: end;
  background-color: var(--secondary);
  border-radius: 10px;
  text-align: center;
}

fieldset > button:first-child() {
  align-self: start;
}

#submit {
  justify-content: flex-end;
}

.layer {
  display: none;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;  
  background-color: rgba(0, 0, 0, .7);
}

.layer[visible] {
  display: block;
}
